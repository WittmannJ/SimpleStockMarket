@using Microsoft.JSInterop
@inject IJSRuntime JS

<div class="stock-chart-wrapper">
    <button @onclick="DeleteChart">‚ùå Remove</button>
    <canvas id="@ChartId" class="stock-chart"></canvas>
</div>

@code {
    [Parameter]
    public StockPriceResponse? StockData { get; set; }

    [Parameter]
    public EventCallback<string> OnDelete { get; set; } // Event to notify parent

    private string ChartId = $"chart-{Guid.NewGuid()}";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && StockData?.Prices.Any() == true)
        {
            var labels = StockData.Prices.Select(p => p.Date.ToString("yyyy-MM-dd")).ToList();
            var prices = StockData.Prices.Select(p => p.Close).ToList();

            await JS.InvokeVoidAsync("renderStockChart", ChartId, labels, prices, StockData.Symbol);
        }
    }

    private async Task DeleteChart()
    {
        // Destroy the Chart.js instance
        await JS.InvokeVoidAsync("destroyStockChart", ChartId);

        // Notify parent component to remove the stock entry
        await OnDelete.InvokeAsync(StockData?.Symbol);
    }
}
